당신은 파이썬 애플리케이션 개발 전문가입니다. 아래 요구사항에 맞춰 이미지 프레임 동기화(synchronization)를 위한 GUI 툴의 전체 코드를 작성해 주세요.

1. 프로그램 개요
목표: 프레임 수가 서로 다른 두 카메라(A5, A6)의 영상 이미지들을 사용자가 시각적으로 비교하며 쌍(pair)을 맞춰 저장하는 파이썬(Python) 기반 GUI 툴 개발.

사용 라이브러리: PyQt5를 사용한 GUI, 이미지 처리를 위한 Pillow(PIL).

2. 핵심 기능
가. 기본 실행 및 레이아웃
스크립트 실행 시 동기화할 이미지 폴더의 상위 경로를 인자(argument)로 받습니다.

실행 예: python sync_tool.py "Y:\path\to\parent_folder"

해당 경로 안에는 image_a5와 image_a6 폴더가 존재해야 합니다.

해당 경로에는 frame_offset.txt 반드시 존재합니다. 존재하지 않는다면 프로그램 실행 실패입니다.

frame_offset.txt 안에는 
a5_start 373
a6_start 217

a5_end 3038
a6_end 2439

이런식으로 image_a5와 image_a6 시작과 끝지점이 기입되어 있습니다.

반드시 실행은 저 시작점으로 이미지를 표시하고, end point 이상으로 이미지가 넘어가지 않습니다.

다시 처음으로 넘어가더라도 start 번호로 넘어올 수 있습니다.

화면 구성:

왼쪽 패널: image_a5 폴더의 이미지를 표시.

오른쪽 패널: image_a6 폴더의 이미지를 표시.

각 이미지 상단에는 현재 표시된 이미지의 원본 파일명을 텍스트로 출력합니다. 시각적으로 보여야합니다.

두 이미지의 크기가 다르므로, 각 패널의 크기에 맞춰 이미지가 자동으로 동일하게 리사이즈되어야 합니다.

자동 맞춤으로 2개의 이미지를 패널에 딱 맞게 구성해주세요. 이미지를 작게 만들어서 보여줘도 상관 없습니다.

나. 키보드 컨트롤
A5 카메라 (왼쪽 이미지) 제어:

Q 키: 이전 프레임으로 이동.

E 키: 다음 프레임으로 이동.

A6 카메라 (오른쪽 이미지) 제어:

A 키: 이전 프레임으로 이동.

D 키 : 다음 프레임으로 이동. 

저장 기능:

Enter 키: 현재 화면에 보이는 A5와 A6 이미지를 한 쌍으로 매칭하여 저장.

보기 모드(View Mode) 전환:
V 키: '동기화 모드'와 '보기 모드'를 전환합니다.
보기 모드에서는 A/D 키를 사용하여 저장된 쌍들을 탐색할 수 있습니다.

다. 데이터 저장 및 처리
최초 저장 시:

원본 상위 폴더 내에 synced_data 라는 새 폴더를 생성합니다.

synced_data 폴더 안에 image_a5와 image_a6 폴더를 각각 생성합니다.

이미지 복사 및 이름 변경:

Enter 키를 누르면, 현재 선택된 왼쪽(A5) 이미지와 오른쪽(A6) 이미지가 synced_data 안의 각 폴더로 복사됩니다.

저장되는 파일명은 **0부터 시작하는 10자리 숫자 형식(zero-padding)**으로 순차적으로 통일합니다. (예: 0000000000.png, 0000000001.png, ...)

예시: 첫 번째 쌍을 저장하면 synced_data/image_a5/0000000000.png와 synced_data/image_a6/0000000000.png가 생성됩니다.

저장이 된 이미지들은 같은 쌍의 이미지 윤곽이 초록색으로 표시되어야 합니다.

시각적으로 저장한 이미지와 저장이 안된 이미지들이 구분이 되어야 합니다. 

라. 매핑 정보 관리 (JSON)
JSON 파일 생성 및 관리:

synced_data 폴더 내에 mapping_data.json 파일을 생성하여 모든 매핑 정보를 기록합니다.

JSON 데이터 구조는 각 쌍의 원본 경로와 새 파일명을 포함해야 합니다.

JSON

[
  {
    "id": 0,
    "new_filename": "0000000000.png",
    "a5_original_path": "Y:\\...\\image_a5\\original_name_1.png",
    "a6_original_path": "Y:\\...\\image_a6\\original_name_A.png"
  },
  {
    "id": 1,
    "new_filename": "0000000001.png",
    "a5_original_path": "Y:\\...\\image_a5\\original_name_2.png",
    "a6_original_path": "Y:\\...\\image_a6\\original_name_B.png"
  }
]
데이터 연속성 및 수정:

프로그램 재시작 시 mapping_data.json 파일이 존재하면, 데이터를 불러와 마지막에 저장된 다음 번호부터 작업을 이어갈 수 있어야 합니다.

실수 수정 기능: Backspace 키를 누르면 가장 마지막에 저장된 매핑 정보 (JSON 내 마지막 항목)와 해당 이미지 파일(synced_data 폴더 안의 파일)을 삭제하는 기능을 추가합니다. 이를 통해 방금 저장한 작업의 실수를 바로잡을 수 있습니다.

매핑 데이터 시각화를 추가해주세요.

3. 코드 요구사항
코드는 단일 파이썬 스크립트 파일(.py)로 작성해 주세요.

누구나 쉽게 이해하고 수정할 수 있도록 주요 기능에 대한 주석을 상세히 달아주세요.

오류 처리(예: 폴더나 파일이 없을 경우)를 포함하여 안정적으로 동작하도록 만들어 주세요.